{"ast":null,"code":"import{instance}from\".\";const fetchFlashCards=async _ref=>{let{sort}=_ref;try{const{data}=await instance.get(\"cards?\".concat(sort));return data;}catch(error){throw new Error(error);}};const createFlashCard=async _ref2=>{let{text,question,image,answer,description,answerImage,dateTime,status}=_ref2;try{const datab={text:text,question:question,image:image,answer:answer,description:description,answerImage:answerImage,dateTime:dateTime,status:status};await instance.post(\"cards\",datab,{headers:{\"Content-Type\":\"application/json\"}});}catch(error){throw new Error(error);}};const updateFlashCard=async _ref3=>{let{id,text,question,image,answer,description,answerImage,dateTime}=_ref3;try{const datab={id:id,text:text,question:question,image:image,answer:answer,description:description,answerImage:answerImage,dateTime:dateTime};await instance.patch(\"cards/\".concat(id),datab,{headers:{\"Content-Type\":\"application/json\"}});}catch(error){throw new Error(error);}};const updateStatusOfFlashCard=async _ref4=>{let{id,status}=_ref4;try{const datab={status:status};await instance.patch(\"cards/\".concat(id),datab,{headers:{\"Content-Type\":\"application/json\"}});}catch(error){throw new Error(error);}};const updateOrderOfFlashCard=async _ref5=>{let{id,order}=_ref5;try{const datab={order:order};await instance.patch(\"cards/\".concat(id),datab,{headers:{\"Content-Type\":\"application/json\"}});}catch(error){throw new Error(error);}};const removeFlashCard=async _ref6=>{let{id}=_ref6;try{await instance.delete(\"cards/\".concat(id),{headers:{\"Content-Type\":\"application/json\"}});const{data}=await instance.get(\"cards\");return data;}catch(error){throw new Error(error);}};export{fetchFlashCards,createFlashCard,updateFlashCard,removeFlashCard,updateStatusOfFlashCard,updateOrderOfFlashCard};","map":{"version":3,"names":["instance","fetchFlashCards","_ref","sort","data","get","concat","error","Error","createFlashCard","_ref2","text","question","image","answer","description","answerImage","dateTime","status","datab","post","headers","updateFlashCard","_ref3","id","patch","updateStatusOfFlashCard","_ref4","updateOrderOfFlashCard","_ref5","order","removeFlashCard","_ref6","delete"],"sources":["/Users/telmxn/Desktop/Coding/FlashCard/FlashCard/src/api/flashcards.js"],"sourcesContent":["import { instance } from \".\";\n\nconst fetchFlashCards = async ({ sort }) => {\n  try {\n    const { data } = await instance.get(`cards?${sort}`);\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst createFlashCard = async ({\n  text,\n  question,\n  image,\n  answer,\n  description,\n  answerImage,\n  dateTime,\n  status,\n}) => {\n  try {\n    const datab = {\n      text: text,\n      question: question,\n      image: image,\n      answer: answer,\n      description: description,\n      answerImage: answerImage,\n      dateTime: dateTime,\n      status: status,\n    };\n    await instance.post(`cards`, datab, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst updateFlashCard = async ({\n  id,\n  text,\n  question,\n  image,\n  answer,\n  description,\n  answerImage,\n  dateTime,\n}) => {\n  try {\n    const datab = {\n      id: id,\n      text: text,\n      question: question,\n      image: image,\n      answer: answer,\n      description: description,\n      answerImage: answerImage,\n      dateTime: dateTime,\n    };\n    await instance.patch(`cards/${id}`, datab, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst updateStatusOfFlashCard = async ({ id, status }) => {\n  try {\n    const datab = {\n      status: status,\n    };\n    await instance.patch(`cards/${id}`, datab, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst updateOrderOfFlashCard = async ({ id, order }) => {\n  try {\n    const datab = {\n      order: order,\n    };\n    await instance.patch(`cards/${id}`, datab, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst removeFlashCard = async ({ id }) => {\n  try {\n    await instance.delete(`cards/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const { data } = await instance.get(`cards`);\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport {\n  fetchFlashCards,\n  createFlashCard,\n  updateFlashCard,\n  removeFlashCard,\n  updateStatusOfFlashCard,\n  updateOrderOfFlashCard,\n};\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,GAAG,CAE5B,KAAM,CAAAC,eAAe,CAAG,MAAAC,IAAA,EAAoB,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CACrC,GAAI,CACF,KAAM,CAAEE,IAAK,CAAC,CAAG,KAAM,CAAAJ,QAAQ,CAACK,GAAG,UAAAC,MAAA,CAAUH,IAAI,CAAE,CAAC,CACpD,MAAO,CAAAC,IAAI,CACb,CAAE,MAAOG,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAACD,KAAK,CAAC,CACxB,CACF,CAAC,CAED,KAAM,CAAAE,eAAe,CAAG,MAAAC,KAAA,EASlB,IATyB,CAC7BC,IAAI,CACJC,QAAQ,CACRC,KAAK,CACLC,MAAM,CACNC,WAAW,CACXC,WAAW,CACXC,QAAQ,CACRC,MACF,CAAC,CAAAR,KAAA,CACC,GAAI,CACF,KAAM,CAAAS,KAAK,CAAG,CACZR,IAAI,CAAEA,IAAI,CACVC,QAAQ,CAAEA,QAAQ,CAClBC,KAAK,CAAEA,KAAK,CACZC,MAAM,CAAEA,MAAM,CACdC,WAAW,CAAEA,WAAW,CACxBC,WAAW,CAAEA,WAAW,CACxBC,QAAQ,CAAEA,QAAQ,CAClBC,MAAM,CAAEA,MACV,CAAC,CACD,KAAM,CAAAlB,QAAQ,CAACoB,IAAI,SAAUD,KAAK,CAAE,CAClCE,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CACJ,CAAE,MAAOd,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAACD,KAAK,CAAC,CACxB,CACF,CAAC,CAED,KAAM,CAAAe,eAAe,CAAG,MAAAC,KAAA,EASlB,IATyB,CAC7BC,EAAE,CACFb,IAAI,CACJC,QAAQ,CACRC,KAAK,CACLC,MAAM,CACNC,WAAW,CACXC,WAAW,CACXC,QACF,CAAC,CAAAM,KAAA,CACC,GAAI,CACF,KAAM,CAAAJ,KAAK,CAAG,CACZK,EAAE,CAAEA,EAAE,CACNb,IAAI,CAAEA,IAAI,CACVC,QAAQ,CAAEA,QAAQ,CAClBC,KAAK,CAAEA,KAAK,CACZC,MAAM,CAAEA,MAAM,CACdC,WAAW,CAAEA,WAAW,CACxBC,WAAW,CAAEA,WAAW,CACxBC,QAAQ,CAAEA,QACZ,CAAC,CACD,KAAM,CAAAjB,QAAQ,CAACyB,KAAK,UAAAnB,MAAA,CAAUkB,EAAE,EAAIL,KAAK,CAAE,CACzCE,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CACJ,CAAE,MAAOd,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAACD,KAAK,CAAC,CACxB,CACF,CAAC,CAED,KAAM,CAAAmB,uBAAuB,CAAG,MAAAC,KAAA,EAA0B,IAAnB,CAAEH,EAAE,CAAEN,MAAO,CAAC,CAAAS,KAAA,CACnD,GAAI,CACF,KAAM,CAAAR,KAAK,CAAG,CACZD,MAAM,CAAEA,MACV,CAAC,CACD,KAAM,CAAAlB,QAAQ,CAACyB,KAAK,UAAAnB,MAAA,CAAUkB,EAAE,EAAIL,KAAK,CAAE,CACzCE,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CACJ,CAAE,MAAOd,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAACD,KAAK,CAAC,CACxB,CACF,CAAC,CAED,KAAM,CAAAqB,sBAAsB,CAAG,MAAAC,KAAA,EAAyB,IAAlB,CAAEL,EAAE,CAAEM,KAAM,CAAC,CAAAD,KAAA,CACjD,GAAI,CACF,KAAM,CAAAV,KAAK,CAAG,CACZW,KAAK,CAAEA,KACT,CAAC,CACD,KAAM,CAAA9B,QAAQ,CAACyB,KAAK,UAAAnB,MAAA,CAAUkB,EAAE,EAAIL,KAAK,CAAE,CACzCE,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CACJ,CAAE,MAAOd,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAACD,KAAK,CAAC,CACxB,CACF,CAAC,CAED,KAAM,CAAAwB,eAAe,CAAG,MAAAC,KAAA,EAAkB,IAAX,CAAER,EAAG,CAAC,CAAAQ,KAAA,CACnC,GAAI,CACF,KAAM,CAAAhC,QAAQ,CAACiC,MAAM,UAAA3B,MAAA,CAAUkB,EAAE,EAAI,CACnCH,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CACF,KAAM,CAAEjB,IAAK,CAAC,CAAG,KAAM,CAAAJ,QAAQ,CAACK,GAAG,QAAQ,CAAC,CAC5C,MAAO,CAAAD,IAAI,CACb,CAAE,MAAOG,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAACD,KAAK,CAAC,CACxB,CACF,CAAC,CAED,OACEN,eAAe,CACfQ,eAAe,CACfa,eAAe,CACfS,eAAe,CACfL,uBAAuB,CACvBE,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}